; ModuleID = 'moudle'
source_filename = "moudle"

define i32 @f(i32 %0) {
fEntry:
  %pointeri = alloca i32, align 4
  store i32 %0, i32* %pointeri, align 4
  %i = load i32, i32* %pointeri, align 4
  ret i32 %i
}

define void @g() {
gEntry:
  %pointerj = alloca i32, align 4
  store i32 6, i32* %pointerj, align 4
  ret void
}

define void @func() {
funcEntry:
  ret void
}

define i32 @main() {
mainEntry:
  %pointera = alloca i32, align 4
  store i32 1, i32* %pointera, align 4
  %pointerarray = alloca i32, align 4
  %vectorPointor = alloca <5 x i32>, align 32
  %GEP_0 = getelementptr <5 x i32>, <5 x i32>* %vectorPointor, i32 0, i32 0
  store i32 1, i32* %GEP_0, align 4
  %GEP_1 = getelementptr <5 x i32>, <5 x i32>* %vectorPointor, i32 0, i32 1
  store i32 2, i32* %GEP_1, align 4
  %GEP_2 = getelementptr <5 x i32>, <5 x i32>* %vectorPointor, i32 0, i32 2
  store i32 3, i32* %GEP_2, align 4
  %GEP_3 = getelementptr <5 x i32>, <5 x i32>* %vectorPointor, i32 0, i32 3
  store i32 0, i32* %GEP_3, align 4
  %GEP_4 = getelementptr <5 x i32>, <5 x i32>* %vectorPointor, i32 0, i32 4
  store i32 0, i32* %GEP_4, align 4
  %array = getelementptr <5 x i32>, <5 x i32>* %vectorPointor, i32 0, i32 3
  %a = load i32, i32* %pointera, align 4
  store i32 %a, i32* %array, align 4
  %array1 = getelementptr <5 x i32>, <5 x i32>* %vectorPointor, i32 0, i32 4
  %a2 = load i32, i32* %pointera, align 4
  %add = add i32 %a2, 5
  store i32 %add, i32* %array1, align 4
  call void @g()
  %a3 = load i32, i32* %pointera, align 4
  %array4 = getelementptr <5 x i32>, <5 x i32>* %vectorPointor, i32 0, i32 4
  %"array[4]" = load i32, i32* %array4, align 4
  %mul = mul i32 %a3, %"array[4]"
  %0 = call i32 @f(i32 %mul)
  ret i32 %0
}
