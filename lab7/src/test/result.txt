; ModuleID = 'moudle'
source_filename = "moudle"

@a = global [10 x i32] [i32 5, i32 4, i32 3, i32 2, i32 1, i32 8, i32 6, i32 2, i32 4, i32 7]

define i32 @main() {
mainEntry:
  %pointeri = alloca i32, align 4
  store i32 0, i32* %pointeri, align 4
  %pointerj = alloca i32, align 4
  store i32 0, i32* %pointerj, align 4
  %pointermin = alloca i32, align 4
  store i32 0, i32* %pointermin, align 4
  br label %whileCondition

whileCondition:                                   ; preds = %entry17, %mainEntry
  %i = load i32, i32* %pointeri, align 4
  %LT = icmp slt i32 %i, 9
  br i1 %LT, label %whileBody, label %entry

whileBody:                                        ; preds = %entry17, %whileCondition
  %i1 = load i32, i32* %pointeri, align 4
  store i32 %i1, i32* %pointerj, align 4
  %i2 = load i32, i32* %pointeri, align 4
  store i32 %i2, i32* %pointermin, align 4
  br label %whileCondition3

entry:                                            ; preds = %entry17, %whileCondition
  %"a[3]" = load i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 3), align 4
  ret i32 %"a[3]"

whileCondition3:                                  ; preds = %entry10, %whileBody
  %j = load i32, i32* %pointerj, align 4
  %LT6 = icmp slt i32 %j, 9
  br i1 %LT6, label %whileBody4, label %entry5

whileBody4:                                       ; preds = %entry10, %whileCondition3
  %j7 = load i32, i32* %pointerj, align 4
  %array = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %j7
  %"a[j]" = load i32, i32* %array, align 4
  %min = load i32, i32* %pointermin, align 4
  %array8 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %min
  %"a[min]" = load i32, i32* %array8, align 4
  %LT9 = icmp slt i32 %"a[j]", %"a[min]"
  br i1 %LT9, label %true, label %false

entry5:                                           ; preds = %entry10, %whileCondition3
  %min13 = load i32, i32* %pointermin, align 4
  %i14 = load i32, i32* %pointeri, align 4
  %NE = icmp ne i32 %min13, %i14
  br i1 %NE, label %true15, label %false16

true:                                             ; preds = %whileBody4
  %j11 = load i32, i32* %pointerj, align 4
  store i32 %j11, i32* %pointermin, align 4
  br label %entry10

false:                                            ; preds = %whileBody4
  br label %entry10

entry10:                                          ; preds = %false, %true
  %j12 = load i32, i32* %pointerj, align 4
  %add = add i32 %j12, 1
  store i32 %add, i32* %pointerj, align 4
  br label %whileCondition3
  br i1 %LT6, label %whileBody4, label %entry5

true15:                                           ; preds = %entry5
  %pointertemp = alloca i32, align 4
  %min18 = load i32, i32* %pointermin, align 4
  %array19 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %min18
  %"a[min]20" = load i32, i32* %array19, align 4
  store i32 %"a[min]20", i32* %pointertemp, align 4
  %min21 = load i32, i32* %pointermin, align 4
  %array22 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %min21
  %i23 = load i32, i32* %pointeri, align 4
  %array24 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %i23
  %"a[i]" = load i32, i32* %array24, align 4
  store i32 %"a[i]", i32* %array22, align 4
  %i25 = load i32, i32* %pointeri, align 4
  %array26 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %i25
  %temp = load i32, i32* %pointertemp, align 4
  store i32 %temp, i32* %array26, align 4
  br label %entry17

false16:                                          ; preds = %entry5
  br label %entry17

entry17:                                          ; preds = %false16, %true15
  %i27 = load i32, i32* %pointeri, align 4
  %add28 = add i32 %i27, 1
  store i32 %add28, i32* %pointeri, align 4
  br label %whileCondition
  br i1 %LT, label %whileBody, label %entry
}
